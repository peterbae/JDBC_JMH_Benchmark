Microsoft Windows [Version 10.0.18362.418]
(c) 2019 Microsoft Corporation. All rights reserved.

C:\Users\peterb>cd C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>mvn deploy:deploy-file -Durl=file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo -Dfile=mssql-jdbc-petercaltozdt.jar -DgroupId=com.microsoft.sqlserver -DartifactId=mssql-jdbc -Dpackaging=jar -Dversion=8.1.1.jre13-preview-calToZDT
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------< org.sample:Try_Benchmark_JMH >--------------------
[INFO] Building JMH benchmark sample: Java 1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- maven-deploy-plugin:2.8.1:deploy-file (default-cli) @ Try_Benchmark_JMH ---
Uploading to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.jar
Uploaded to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.jar (1.0 MB at 4.8 MB/s)
Uploading to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.pom
Uploaded to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.pom (429 B at 31 kB/s)
Downloading from remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/maven-metadata.xml
Downloaded from remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/maven-metadata.xml (341 B at 15 kB/s)
Uploading to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/maven-metadata.xml
Uploaded to remote-repository: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\repo/com/microsoft/sqlserver/mssql-jdbc/maven-metadata.xml (404 B at 37 kB/s)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.079 s
[INFO] Finished at: 2019-11-01T14:42:05-07:00
[INFO] ------------------------------------------------------------------------

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>mvn clean install
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------< org.sample:Try_Benchmark_JMH >--------------------
[INFO] Building JMH benchmark sample: Java 1.0
[INFO] --------------------------------[ jar ]---------------------------------
Downloading from project.local: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH/repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.pom
Downloaded from project.local: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH/repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.pom (429 B at 1.5 kB/s)
Downloading from project.local: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH/repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.jar
Downloaded from project.local: file:C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH/repo/com/microsoft/sqlserver/mssql-jdbc/8.1.1.jre13-preview-calToZDT/mssql-jdbc-8.1.1.jre13-preview-calToZDT.jar (1.0 MB at 4.9 MB/s)
[INFO]
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ Try_Benchmark_JMH ---
[INFO] Deleting C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target
[INFO]
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\main\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ Try_Benchmark_JMH ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\classes
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\test\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ Try_Benchmark_JMH ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ Try_Benchmark_JMH ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ Try_Benchmark_JMH ---
[INFO] Building jar: C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar
[INFO]
[INFO] --- maven-shade-plugin:2.2:shade (default) @ Try_Benchmark_JMH ---
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.21 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[INFO] Including com.microsoft.sqlserver:mssql-jdbc:jar:8.1.1.jre13-preview-calToZDT in the shaded jar.
[INFO] Replacing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\benchmarks.jar with C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0-shaded.jar
[INFO]
[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ Try_Benchmark_JMH ---
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.jar
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\pom.xml to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  4.577 s
[INFO] Finished at: 2019-11-01T14:42:47-07:00
[INFO] ------------------------------------------------------------------------

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>java -jar target/benchmarks.jar
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/C:/Users/peterb/eclipse-workspace/Try_Benchmark_JMH/target/benchmarks.jar) to field java.io.Console.cs
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteCast

# Run progress: 0.00% complete, ETA 00:50:00
# Fork: 1 of 5
# Warmup Iteration   1: 3573.169 ops/s
# Warmup Iteration   2: 3647.855 ops/s
# Warmup Iteration   3: 3589.504 ops/s
# Warmup Iteration   4: 3699.014 ops/s
# Warmup Iteration   5: 3639.663 ops/s
Iteration   1: 3633.485 ops/s
Iteration   2: 3652.170 ops/s
Iteration   3: 3647.752 ops/s
Iteration   4: 3681.262 ops/s
Iteration   5: 3624.785 ops/s

# Run progress: 3.33% complete, ETA 00:48:46
# Fork: 2 of 5
# Warmup Iteration   1: 3561.322 ops/s
# Warmup Iteration   2: 3626.209 ops/s
# Warmup Iteration   3: 3705.716 ops/s
# Warmup Iteration   4: 3691.663 ops/s
# Warmup Iteration   5: 3662.069 ops/s
Iteration   1: 3613.216 ops/s
Iteration   2: 3657.290 ops/s
Iteration   3: 3665.553 ops/s
Iteration   4: 3678.405 ops/s
Iteration   5: 3695.985 ops/s

# Run progress: 6.67% complete, ETA 00:47:05
# Fork: 3 of 5
# Warmup Iteration   1: 3514.888 ops/s
# Warmup Iteration   2: 3639.285 ops/s
# Warmup Iteration   3: 3610.182 ops/s
# Warmup Iteration   4: 3649.364 ops/s
# Warmup Iteration   5: 3612.630 ops/s
Iteration   1: 3601.429 ops/s
Iteration   2: 3713.895 ops/s
Iteration   3: 3623.616 ops/s
Iteration   4: 3565.975 ops/s
Iteration   5: 3694.500 ops/s

# Run progress: 10.00% complete, ETA 00:45:23
# Fork: 4 of 5
# Warmup Iteration   1: 3525.346 ops/s
# Warmup Iteration   2: 3636.094 ops/s
# Warmup Iteration   3: 3622.381 ops/s
# Warmup Iteration   4: 3685.419 ops/s
# Warmup Iteration   5: 3676.209 ops/s
Iteration   1: 3566.617 ops/s
Iteration   2: 3661.754 ops/s
Iteration   3: 3647.513 ops/s
Iteration   4: 3631.515 ops/s
Iteration   5: 3618.402 ops/s

# Run progress: 13.33% complete, ETA 00:43:42
# Fork: 5 of 5
# Warmup Iteration   1: 3546.324 ops/s
# Warmup Iteration   2: 3659.677 ops/s
# Warmup Iteration   3: 3759.058 ops/s
# Warmup Iteration   4: 3699.553 ops/s
# Warmup Iteration   5: 3723.481 ops/s
Iteration   1: 3713.082 ops/s
Iteration   2: 3719.734 ops/s
Iteration   3: 3699.919 ops/s
Iteration   4: 3637.825 ops/s
Iteration   5: 3654.245 ops/s


Result "org.sample.MyBenchmark.testExecuteCast":
  3651.997 Â±(99.9%) 31.515 ops/s [Average]
  (min, avg, max) = (3565.975, 3651.997, 3719.734), stdev = 42.072
  CI (99.9%): [3620.482, 3683.512] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteTable

# Run progress: 16.67% complete, ETA 00:42:01
# Fork: 1 of 5
# Warmup Iteration   1: 1049.096 ops/s
# Warmup Iteration   2: 1038.563 ops/s
# Warmup Iteration   3: 1057.045 ops/s
# Warmup Iteration   4: 1063.668 ops/s
# Warmup Iteration   5: 968.042 ops/s
Iteration   1: 1062.279 ops/s
Iteration   2: 1059.890 ops/s
Iteration   3: 1060.947 ops/s
Iteration   4: 1056.077 ops/s
Iteration   5: 1059.481 ops/s

# Run progress: 20.00% complete, ETA 00:40:20
# Fork: 2 of 5
# Warmup Iteration   1: 1031.318 ops/s
# Warmup Iteration   2: 989.555 ops/s
# Warmup Iteration   3: 1002.998 ops/s
# Warmup Iteration   4: 932.936 ops/s
# Warmup Iteration   5: 1052.281 ops/s
Iteration   1: 1049.131 ops/s
Iteration   2: 1053.841 ops/s
Iteration   3: 954.850 ops/s
Iteration   4: 1050.446 ops/s
Iteration   5: 1050.794 ops/s

# Run progress: 23.33% complete, ETA 00:38:40
# Fork: 3 of 5
# Warmup Iteration   1: 1061.071 ops/s
# Warmup Iteration   2: 1062.667 ops/s
# Warmup Iteration   3: 1059.819 ops/s
# Warmup Iteration   4: 1040.115 ops/s
# Warmup Iteration   5: 985.458 ops/s
Iteration   1: 1053.738 ops/s
Iteration   2: 1052.151 ops/s
Iteration   3: 1042.706 ops/s
Iteration   4: 1054.094 ops/s
Iteration   5: 1046.904 ops/s

# Run progress: 26.67% complete, ETA 00:36:59
# Fork: 4 of 5
# Warmup Iteration   1: 957.286 ops/s
# Warmup Iteration   2: 1052.492 ops/s
# Warmup Iteration   3: 1031.561 ops/s
# Warmup Iteration   4: 1038.626 ops/s
# Warmup Iteration   5: 1047.999 ops/s
Iteration   1: 1042.372 ops/s
Iteration   2: 1021.511 ops/s
Iteration   3: 963.351 ops/s
Iteration   4: 1040.559 ops/s
Iteration   5: 1038.319 ops/s

# Run progress: 30.00% complete, ETA 00:35:18
# Fork: 5 of 5
# Warmup Iteration   1: 1053.374 ops/s
# Warmup Iteration   2: 1053.295 ops/s
# Warmup Iteration   3: 1050.123 ops/s
# Warmup Iteration   4: 958.891 ops/s
# Warmup Iteration   5: 1039.229 ops/s
Iteration   1: 1052.413 ops/s
Iteration   2: 1048.446 ops/s
Iteration   3: 1043.641 ops/s
Iteration   4: 1050.849 ops/s
Iteration   5: 1035.702 ops/s


Result "org.sample.MyBenchmark.testExecuteTable":
  1041.780 Â±(99.9%) 19.837 ops/s [Average]
  (min, avg, max) = (954.850, 1041.780, 1062.279), stdev = 26.482
  CI (99.9%): [1021.942, 1061.617] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetDTO

# Run progress: 33.33% complete, ETA 00:33:37
# Fork: 1 of 5
# Warmup Iteration   1: 417487.067 ops/s
# Warmup Iteration   2: 441924.580 ops/s
# Warmup Iteration   3: 438204.945 ops/s
# Warmup Iteration   4: 438677.723 ops/s
# Warmup Iteration   5: 442993.797 ops/s
Iteration   1: 442484.361 ops/s
Iteration   2: 426573.631 ops/s
Iteration   3: 441385.756 ops/s
Iteration   4: 441857.443 ops/s
Iteration   5: 433071.458 ops/s

# Run progress: 36.67% complete, ETA 00:31:56
# Fork: 2 of 5
# Warmup Iteration   1: 441249.260 ops/s
# Warmup Iteration   2: 450248.989 ops/s
# Warmup Iteration   3: 440999.243 ops/s
# Warmup Iteration   4: 436842.096 ops/s
# Warmup Iteration   5: 444357.175 ops/s
Iteration   1: 439026.532 ops/s
Iteration   2: 439120.089 ops/s
Iteration   3: 447065.515 ops/s
Iteration   4: 445493.358 ops/s
Iteration   5: 433234.638 ops/s

# Run progress: 40.00% complete, ETA 00:30:15
# Fork: 3 of 5
# Warmup Iteration   1: 441399.804 ops/s
# Warmup Iteration   2: 448788.618 ops/s
# Warmup Iteration   3: 442540.749 ops/s
# Warmup Iteration   4: 451964.828 ops/s
# Warmup Iteration   5: 452450.725 ops/s
Iteration   1: 449253.359 ops/s
Iteration   2: 442271.122 ops/s
Iteration   3: 451637.813 ops/s
Iteration   4: 448879.373 ops/s
Iteration   5: 446242.609 ops/s

# Run progress: 43.33% complete, ETA 00:28:34
# Fork: 4 of 5
# Warmup Iteration   1: 449247.547 ops/s
# Warmup Iteration   2: 459556.617 ops/s
# Warmup Iteration   3: 439785.431 ops/s
# Warmup Iteration   4: 453378.980 ops/s
# Warmup Iteration   5: 453972.945 ops/s
Iteration   1: 445699.364 ops/s
Iteration   2: 454106.756 ops/s
Iteration   3: 455590.224 ops/s
Iteration   4: 451085.115 ops/s
Iteration   5: 438176.587 ops/s

# Run progress: 46.67% complete, ETA 00:26:53
# Fork: 5 of 5
# Warmup Iteration   1: 477767.839 ops/s
# Warmup Iteration   2: 490478.648 ops/s
# Warmup Iteration   3: 477800.238 ops/s
# Warmup Iteration   4: 485975.041 ops/s
# Warmup Iteration   5: 485435.471 ops/s
Iteration   1: 473493.505 ops/s
Iteration   2: 486994.066 ops/s
Iteration   3: 486914.644 ops/s
Iteration   4: 475871.517 ops/s
Iteration   5: 486601.412 ops/s


Result "org.sample.MyBenchmark.testGetDTO":
  451285.210 Â±(99.9%) 12900.331 ops/s [Average]
  (min, avg, max) = (426573.631, 451285.210, 486994.066), stdev = 17221.573
  CI (99.9%): [438384.879, 464185.541] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetTimestamp

# Run progress: 50.00% complete, ETA 00:25:13
# Fork: 1 of 5
# Warmup Iteration   1: 426221.126 ops/s
# Warmup Iteration   2: 432397.779 ops/s
# Warmup Iteration   3: 428971.203 ops/s
# Warmup Iteration   4: 438281.243 ops/s
# Warmup Iteration   5: 440060.994 ops/s
Iteration   1: 429977.617 ops/s
Iteration   2: 438839.550 ops/s
Iteration   3: 437074.608 ops/s
Iteration   4: 423617.150 ops/s
Iteration   5: 435300.109 ops/s

# Run progress: 53.33% complete, ETA 00:23:32
# Fork: 2 of 5
# Warmup Iteration   1: 474440.783 ops/s
# Warmup Iteration   2: 472539.994 ops/s
# Warmup Iteration   3: 483919.300 ops/s
# Warmup Iteration   4: 478000.814 ops/s
# Warmup Iteration   5: 483171.102 ops/s
Iteration   1: 462217.039 ops/s
Iteration   2: 479632.490 ops/s
Iteration   3: 491673.938 ops/s
Iteration   4: 482689.746 ops/s
Iteration   5: 475864.448 ops/s

# Run progress: 56.67% complete, ETA 00:21:51
# Fork: 3 of 5
# Warmup Iteration   1: 422734.174 ops/s
# Warmup Iteration   2: 420802.957 ops/s
# Warmup Iteration   3: 439192.396 ops/s
# Warmup Iteration   4: 438724.199 ops/s
# Warmup Iteration   5: 435199.131 ops/s
Iteration   1: 435340.701 ops/s
Iteration   2: 439892.078 ops/s
Iteration   3: 436275.925 ops/s
Iteration   4: 424053.623 ops/s
Iteration   5: 439407.333 ops/s

# Run progress: 60.00% complete, ETA 00:20:10
# Fork: 4 of 5
# Warmup Iteration   1: 446928.407 ops/s
# Warmup Iteration   2: 439781.746 ops/s
# Warmup Iteration   3: 458185.624 ops/s
# Warmup Iteration   4: 457903.653 ops/s
# Warmup Iteration   5: 445351.779 ops/s
Iteration   1: 458948.699 ops/s
Iteration   2: 457698.211 ops/s
Iteration   3: 455055.789 ops/s
Iteration   4: 451251.432 ops/s
Iteration   5: 455861.380 ops/s

# Run progress: 63.33% complete, ETA 00:18:29
# Fork: 5 of 5
# Warmup Iteration   1: 441551.156 ops/s
# Warmup Iteration   2: 442694.090 ops/s
# Warmup Iteration   3: 451953.307 ops/s
# Warmup Iteration   4: 448694.656 ops/s
# Warmup Iteration   5: 437639.663 ops/s
Iteration   1: 450225.697 ops/s
Iteration   2: 450032.119 ops/s
Iteration   3: 432577.408 ops/s
Iteration   4: 448764.549 ops/s
Iteration   5: 451143.251 ops/s


Result "org.sample.MyBenchmark.testGetTimestamp":
  449736.596 Â±(99.9%) 13592.806 ops/s [Average]
  (min, avg, max) = (423617.150, 449736.596, 491673.938), stdev = 18146.007
  CI (99.9%): [436143.789, 463329.402] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetDTO

# Run progress: 66.67% complete, ETA 00:16:48
# Fork: 1 of 5
# Warmup Iteration   1: 24006943.503 ops/s
# Warmup Iteration   2: 23778116.422 ops/s
# Warmup Iteration   3: 24591673.584 ops/s
# Warmup Iteration   4: 24551122.821 ops/s
# Warmup Iteration   5: 24133899.228 ops/s
Iteration   1: 24412621.887 ops/s
Iteration   2: 24407748.156 ops/s
Iteration   3: 24131623.117 ops/s
Iteration   4: 24564076.765 ops/s
Iteration   5: 24601783.268 ops/s

# Run progress: 70.00% complete, ETA 00:15:07
# Fork: 2 of 5
# Warmup Iteration   1: 23576257.587 ops/s
# Warmup Iteration   2: 24124627.449 ops/s
# Warmup Iteration   3: 24618973.794 ops/s
# Warmup Iteration   4: 24591218.676 ops/s
# Warmup Iteration   5: 24348316.618 ops/s
Iteration   1: 24614370.571 ops/s
Iteration   2: 24607132.090 ops/s
Iteration   3: 23857081.679 ops/s
Iteration   4: 24632868.300 ops/s
Iteration   5: 24646959.916 ops/s

# Run progress: 73.33% complete, ETA 00:13:27
# Fork: 3 of 5
# Warmup Iteration   1: 23818839.147 ops/s
# Warmup Iteration   2: 24107389.705 ops/s
# Warmup Iteration   3: 24652383.104 ops/s
# Warmup Iteration   4: 23940014.316 ops/s
# Warmup Iteration   5: 24668903.911 ops/s
Iteration   1: 24575379.651 ops/s
Iteration   2: 24595102.035 ops/s
Iteration   3: 24392188.417 ops/s
Iteration   4: 24599808.933 ops/s
Iteration   5: 24591994.525 ops/s

# Run progress: 76.67% complete, ETA 00:11:46
# Fork: 4 of 5
# Warmup Iteration   1: 23649562.473 ops/s
# Warmup Iteration   2: 24102968.046 ops/s
# Warmup Iteration   3: 24600605.491 ops/s
# Warmup Iteration   4: 24308215.836 ops/s
# Warmup Iteration   5: 24498198.221 ops/s
Iteration   1: 24420536.272 ops/s
Iteration   2: 23947419.714 ops/s
Iteration   3: 24538109.076 ops/s
Iteration   4: 24499493.279 ops/s
Iteration   5: 24618693.935 ops/s

# Run progress: 80.00% complete, ETA 00:10:05
# Fork: 5 of 5
# Warmup Iteration   1: 23889607.613 ops/s
# Warmup Iteration   2: 24069768.571 ops/s
# Warmup Iteration   3: 24601916.035 ops/s
# Warmup Iteration   4: 24187113.460 ops/s
# Warmup Iteration   5: 24561682.725 ops/s
Iteration   1: 24508777.721 ops/s
Iteration   2: 24450775.688 ops/s
Iteration   3: 24373620.948 ops/s
Iteration   4: 24496526.359 ops/s
Iteration   5: 24238474.430 ops/s


Result "org.sample.MyBenchmark.testSetDTO":
  24452926.669 Â±(99.9%) 156451.484 ops/s [Average]
  (min, avg, max) = (23857081.679, 24452926.669, 24646959.916), stdev = 208858.255
  CI (99.9%): [24296475.185, 24609378.153] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetTimestamp

# Run progress: 83.33% complete, ETA 00:08:24
# Fork: 1 of 5
# Warmup Iteration   1: 23611950.288 ops/s
# Warmup Iteration   2: 24074122.254 ops/s
# Warmup Iteration   3: 24542585.942 ops/s
# Warmup Iteration   4: 24089109.928 ops/s
# Warmup Iteration   5: 24538650.518 ops/s
Iteration   1: 24457828.971 ops/s
Iteration   2: 24046401.343 ops/s
Iteration   3: 24623927.743 ops/s
Iteration   4: 24601039.529 ops/s
Iteration   5: 24517223.866 ops/s

# Run progress: 86.67% complete, ETA 00:06:43
# Fork: 2 of 5
# Warmup Iteration   1: 23959559.413 ops/s
# Warmup Iteration   2: 24090355.960 ops/s
# Warmup Iteration   3: 24239385.273 ops/s
# Warmup Iteration   4: 24671827.336 ops/s
# Warmup Iteration   5: 24600819.210 ops/s
Iteration   1: 24680346.998 ops/s
Iteration   2: 24339517.420 ops/s
Iteration   3: 24557561.717 ops/s
Iteration   4: 24610068.425 ops/s
Iteration   5: 24202198.638 ops/s

# Run progress: 90.00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 23835286.823 ops/s
# Warmup Iteration   2: 24233879.250 ops/s
# Warmup Iteration   3: 24792768.681 ops/s
# Warmup Iteration   4: 24262134.295 ops/s
# Warmup Iteration   5: 24715356.338 ops/s
Iteration   1: 24112165.829 ops/s
Iteration   2: 24599462.825 ops/s
Iteration   3: 24574497.044 ops/s
Iteration   4: 24748968.362 ops/s
Iteration   5: 23998969.173 ops/s

# Run progress: 93.33% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 21148814.785 ops/s
# Warmup Iteration   2: 21007294.451 ops/s
# Warmup Iteration   3: 21221485.715 ops/s
# Warmup Iteration   4: 21884080.430 ops/s
# Warmup Iteration   5: 21877758.700 ops/s
Iteration   1: 21939637.592 ops/s
Iteration   2: 21717471.616 ops/s
Iteration   3: 22200562.933 ops/s
Iteration   4: 21794256.886 ops/s
Iteration   5: 22169157.483 ops/s

# Run progress: 96.67% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 24296953.164 ops/s
# Warmup Iteration   2: 24390775.164 ops/s
# Warmup Iteration   3: 24688093.681 ops/s
# Warmup Iteration   4: 24748502.039 ops/s
# Warmup Iteration   5: 24788004.376 ops/s
Iteration   1: 24417135.446 ops/s
Iteration   2: 24910297.554 ops/s
Iteration   3: 24923981.853 ops/s
Iteration   4: 24903050.798 ops/s
Iteration   5: 24570312.429 ops/s


Result "org.sample.MyBenchmark.testSetTimestamp":
  24008641.699 Â±(99.9%) 804758.353 ops/s [Average]
  (min, avg, max) = (21717471.616, 24008641.699, 24923981.853), stdev = 1074329.376
  CI (99.9%): [23203883.346, 24813400.052] (assumes normal distribution)


# Run complete. Total time: 00:50:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      Mode  Cnt         Score        Error  Units
MyBenchmark.testExecuteCast   thrpt   25      3651.997 Â±     31.515  ops/s
MyBenchmark.testExecuteTable  thrpt   25      1041.780 Â±     19.837  ops/s
MyBenchmark.testGetDTO        thrpt   25    451285.210 Â±  12900.331  ops/s
MyBenchmark.testGetTimestamp  thrpt   25    449736.596 Â±  13592.806  ops/s
MyBenchmark.testSetDTO        thrpt   25  24452926.669 Â± 156451.484  ops/s
MyBenchmark.testSetTimestamp  thrpt   25  24008641.699 Â± 804758.353  ops/s

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>mvn clean install
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------< org.sample:Try_Benchmark_JMH >--------------------
[INFO] Building JMH benchmark sample: Java 1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ Try_Benchmark_JMH ---
[INFO] Deleting C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target
[INFO]
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\main\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ Try_Benchmark_JMH ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\classes
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\test\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ Try_Benchmark_JMH ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ Try_Benchmark_JMH ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ Try_Benchmark_JMH ---
[INFO] Building jar: C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar
[INFO]
[INFO] --- maven-shade-plugin:2.2:shade (default) @ Try_Benchmark_JMH ---
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.21 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[INFO] Including com.microsoft.sqlserver:mssql-jdbc:jar:8.1.1.jre13-preview-calToZDT in the shaded jar.
[INFO] Replacing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\benchmarks.jar with C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0-shaded.jar
[INFO]
[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ Try_Benchmark_JMH ---
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.jar
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\pom.xml to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  12.540 s
[INFO] Finished at: 2019-11-04T15:35:11-08:00
[INFO] ------------------------------------------------------------------------

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>mvn clean install
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------< org.sample:Try_Benchmark_JMH >--------------------
[INFO] Building JMH benchmark sample: Java 1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ Try_Benchmark_JMH ---
[INFO] Deleting C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target
[INFO]
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\main\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ Try_Benchmark_JMH ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\classes
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\test\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ Try_Benchmark_JMH ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ Try_Benchmark_JMH ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ Try_Benchmark_JMH ---
[INFO] Building jar: C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar
[INFO]
[INFO] --- maven-shade-plugin:2.2:shade (default) @ Try_Benchmark_JMH ---
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.21 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[INFO] Including com.microsoft.sqlserver:mssql-jdbc:jar:8.1.1.jre13-preview-calToZDT in the shaded jar.
[INFO] Replacing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\benchmarks.jar with C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0-shaded.jar
[INFO]
[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ Try_Benchmark_JMH ---
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.jar
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\pom.xml to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  4.932 s
[INFO] Finished at: 2019-11-04T15:35:19-08:00
[INFO] ------------------------------------------------------------------------

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>java -jar target/benchmarks.jar
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/C:/Users/peterb/eclipse-workspace/Try_Benchmark_JMH/target/benchmarks.jar) to field java.io.Console.cs
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteCastAfterGregorian

# Run progress: 0.00% complete, ETA 01:23:20
# Fork: 1 of 5
# Warmup Iteration   1: 2392.920 ops/s
# Warmup Iteration   2: 2767.106 ops/s
# Warmup Iteration   3: 3000.467 ops/s
# Warmup Iteration   4: 3072.000 ops/s
# Warmup Iteration   5: 3040.557 ops/s
Iteration   1: 2949.201 ops/s
Iteration   2: 3027.807 ops/s
Iteration   3: 2966.108 ops/s
Iteration   4: 2848.343 ops/s
Iteration   5: 2811.578 ops/s

# Run progress: 2.00% complete, ETA 01:22:32
# Fork: 2 of 5
# Warmup Iteration   1: 3047.421 ops/s
# Warmup Iteration   2: 3105.177 ops/s
# Warmup Iteration   3: 3078.295 ops/s
# Warmup Iteration   4: 3105.188 ops/s
# Warmup Iteration   5: 2981.019 ops/s
Iteration   1: 3163.162 ops/s
Iteration   2: 3138.116 ops/s
Iteration   3: 2641.100 ops/s
Iteration   4: 2964.875 ops/s
Iteration   5: 2859.848 ops/s

# Run progress: 4.00% complete, ETA 01:20:48
# Fork: 3 of 5
# Warmup Iteration   1: 2450.956 ops/s
# Warmup Iteration   2: 2936.281 ops/s
# Warmup Iteration   3: 2760.417 ops/s
# Warmup Iteration   4: 2912.472 ops/s
# Warmup Iteration   5: 3004.601 ops/s
Iteration   1: 2713.867 ops/s
Iteration   2: 2948.390 ops/s
Iteration   3: 2545.649 ops/s
Iteration   4: 2936.535 ops/s
Iteration   5: 3082.946 ops/s

# Run progress: 6.00% complete, ETA 01:19:11
# Fork: 4 of 5
# Warmup Iteration   1: 3131.442 ops/s
# Warmup Iteration   2: 3123.437 ops/s
# Warmup Iteration   3: 3153.643 ops/s
# Warmup Iteration   4: 2959.428 ops/s
# Warmup Iteration   5: 2993.645 ops/s
Iteration   1: 3114.088 ops/s
Iteration   2: 3149.032 ops/s
Iteration   3: 3143.243 ops/s
Iteration   4: 2895.894 ops/s
Iteration   5: 3177.183 ops/s

# Run progress: 8.00% complete, ETA 01:17:28
# Fork: 5 of 5
# Warmup Iteration   1: 3001.680 ops/s
# Warmup Iteration   2: 3165.619 ops/s
# Warmup Iteration   3: 3159.291 ops/s
# Warmup Iteration   4: 2916.290 ops/s
# Warmup Iteration   5: 2832.659 ops/s
Iteration   1: 3061.129 ops/s
Iteration   2: 2918.637 ops/s
Iteration   3: 2924.668 ops/s
Iteration   4: 2935.718 ops/s
Iteration   5: 3115.820 ops/s


Result "org.sample.MyBenchmark.testExecuteCastAfterGregorian":
  2961.317 Â±(99.9%) 123.694 ops/s [Average]
  (min, avg, max) = (2545.649, 2961.317, 3177.183), stdev = 165.128
  CI (99.9%): [2837.623, 3085.011] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteCastBeforeGregorian

# Run progress: 10.00% complete, ETA 01:15:46
# Fork: 1 of 5
# Warmup Iteration   1: 3159.302 ops/s
# Warmup Iteration   2: 2982.212 ops/s
# Warmup Iteration   3: 3118.240 ops/s
# Warmup Iteration   4: 2819.605 ops/s
# Warmup Iteration   5: 2895.093 ops/s
Iteration   1: 3083.703 ops/s
Iteration   2: 2924.369 ops/s
Iteration   3: 2973.296 ops/s
Iteration   4: 2814.353 ops/s
Iteration   5: 2654.202 ops/s

# Run progress: 12.00% complete, ETA 01:14:06
# Fork: 2 of 5
# Warmup Iteration   1: 3016.174 ops/s
# Warmup Iteration   2: 2892.224 ops/s
# Warmup Iteration   3: 2388.914 ops/s
# Warmup Iteration   4: 3093.981 ops/s
# Warmup Iteration   5: 3047.360 ops/s
Iteration   1: 3127.382 ops/s
Iteration   2: 2979.669 ops/s
Iteration   3: 3062.701 ops/s
Iteration   4: 2954.466 ops/s
Iteration   5: 2964.318 ops/s

# Run progress: 14.00% complete, ETA 01:12:25
# Fork: 3 of 5
# Warmup Iteration   1: 2684.696 ops/s
# Warmup Iteration   2: 3009.498 ops/s
# Warmup Iteration   3: 2993.918 ops/s
# Warmup Iteration   4: 3117.926 ops/s
# Warmup Iteration   5: 2665.484 ops/s
Iteration   1: 3119.646 ops/s
Iteration   2: 3173.880 ops/s
Iteration   3: 3130.878 ops/s
Iteration   4: 2878.657 ops/s
Iteration   5: 2504.550 ops/s

# Run progress: 16.00% complete, ETA 01:10:45
# Fork: 4 of 5
# Warmup Iteration   1: 2916.763 ops/s
# Warmup Iteration   2: 2551.300 ops/s
# Warmup Iteration   3: 2656.896 ops/s
# Warmup Iteration   4: 3023.206 ops/s
# Warmup Iteration   5: 3101.119 ops/s
Iteration   1: 2950.448 ops/s
Iteration   2: 2971.801 ops/s
Iteration   3: 2958.953 ops/s
Iteration   4: 3049.239 ops/s
Iteration   5: 2983.253 ops/s

# Run progress: 18.00% complete, ETA 01:09:04
# Fork: 5 of 5
# Warmup Iteration   1: 2944.466 ops/s
# Warmup Iteration   2: 3030.283 ops/s
# Warmup Iteration   3: 2931.731 ops/s
# Warmup Iteration   4: 3192.514 ops/s
# Warmup Iteration   5: 3176.356 ops/s
Iteration   1: 3153.827 ops/s
Iteration   2: 3182.032 ops/s
Iteration   3: 3138.188 ops/s
Iteration   4: 3059.633 ops/s
Iteration   5: 3144.091 ops/s


Result "org.sample.MyBenchmark.testExecuteCastBeforeGregorian":
  2997.501 Â±(99.9%) 120.492 ops/s [Average]
  (min, avg, max) = (2504.550, 2997.501, 3182.032), stdev = 160.853
  CI (99.9%): [2877.010, 3117.993] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteTableAfterGregorian

# Run progress: 20.00% complete, ETA 01:07:23
# Fork: 1 of 5
# Warmup Iteration   1: 1033.025 ops/s
# Warmup Iteration   2: 1043.125 ops/s
# Warmup Iteration   3: 1037.680 ops/s
# Warmup Iteration   4: 1024.434 ops/s
# Warmup Iteration   5: 1010.248 ops/s
Iteration   1: 895.369 ops/s
Iteration   2: 1050.844 ops/s
Iteration   3: 1036.752 ops/s
Iteration   4: 1045.196 ops/s
Iteration   5: 1041.516 ops/s

# Run progress: 22.00% complete, ETA 01:05:41
# Fork: 2 of 5
# Warmup Iteration   1: 1006.247 ops/s
# Warmup Iteration   2: 762.758 ops/s
# Warmup Iteration   3: 1001.675 ops/s
# Warmup Iteration   4: 962.019 ops/s
# Warmup Iteration   5: 1020.240 ops/s
Iteration   1: 1018.022 ops/s
Iteration   2: 768.674 ops/s
Iteration   3: 835.591 ops/s
Iteration   4: 863.583 ops/s
Iteration   5: 942.058 ops/s

# Run progress: 24.00% complete, ETA 01:04:00
# Fork: 3 of 5
# Warmup Iteration   1: 913.055 ops/s
# Warmup Iteration   2: 1012.125 ops/s
# Warmup Iteration   3: 1041.073 ops/s
# Warmup Iteration   4: 1030.760 ops/s
# Warmup Iteration   5: 905.503 ops/s
Iteration   1: 878.724 ops/s
Iteration   2: 958.861 ops/s
Iteration   3: 890.041 ops/s
Iteration   4: 971.300 ops/s
Iteration   5: 935.317 ops/s

# Run progress: 26.00% complete, ETA 01:02:18
# Fork: 4 of 5
# Warmup Iteration   1: 985.521 ops/s
# Warmup Iteration   2: 729.713 ops/s
# Warmup Iteration   3: 717.730 ops/s
# Warmup Iteration   4: 861.374 ops/s
# Warmup Iteration   5: 893.631 ops/s
Iteration   1: 998.983 ops/s
Iteration   2: 975.493 ops/s
Iteration   3: 894.189 ops/s
Iteration   4: 738.460 ops/s
Iteration   5: 1003.449 ops/s

# Run progress: 28.00% complete, ETA 01:00:37
# Fork: 5 of 5
# Warmup Iteration   1: 876.869 ops/s
# Warmup Iteration   2: 919.999 ops/s
# Warmup Iteration   3: 930.667 ops/s
# Warmup Iteration   4: 695.157 ops/s
# Warmup Iteration   5: 690.417 ops/s
Iteration   1: 930.792 ops/s
Iteration   2: 872.482 ops/s
Iteration   3: 946.498 ops/s
Iteration   4: 961.567 ops/s
Iteration   5: 973.604 ops/s


Result "org.sample.MyBenchmark.testExecuteTableAfterGregorian":
  937.095 Â±(99.9%) 61.611 ops/s [Average]
  (min, avg, max) = (738.460, 937.095, 1050.844), stdev = 82.248
  CI (99.9%): [875.484, 998.705] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteTableBeforeGregorian

# Run progress: 30.00% complete, ETA 00:58:56
# Fork: 1 of 5
# Warmup Iteration   1: 811.103 ops/s
# Warmup Iteration   2: 956.528 ops/s
# Warmup Iteration   3: 1000.894 ops/s
# Warmup Iteration   4: 1023.942 ops/s
# Warmup Iteration   5: 990.777 ops/s
Iteration   1: 908.381 ops/s
Iteration   2: 946.925 ops/s
Iteration   3: 764.721 ops/s
Iteration   4: 930.347 ops/s
Iteration   5: 928.509 ops/s

# Run progress: 32.00% complete, ETA 00:57:15
# Fork: 2 of 5
# Warmup Iteration   1: 779.082 ops/s
# Warmup Iteration   2: 842.317 ops/s
# Warmup Iteration   3: 906.583 ops/s
# Warmup Iteration   4: 907.032 ops/s
# Warmup Iteration   5: 892.140 ops/s
Iteration   1: 925.578 ops/s
Iteration   2: 943.093 ops/s
Iteration   3: 953.407 ops/s
Iteration   4: 887.939 ops/s
Iteration   5: 718.776 ops/s

# Run progress: 34.00% complete, ETA 00:55:34
# Fork: 3 of 5
# Warmup Iteration   1: 860.422 ops/s
# Warmup Iteration   2: 1019.415 ops/s
# Warmup Iteration   3: 1005.645 ops/s
# Warmup Iteration   4: 862.598 ops/s
# Warmup Iteration   5: 1026.409 ops/s
Iteration   1: 833.770 ops/s
Iteration   2: 531.054 ops/s
Iteration   3: 905.435 ops/s
Iteration   4: 1010.814 ops/s
Iteration   5: 983.501 ops/s

# Run progress: 36.00% complete, ETA 00:53:53
# Fork: 4 of 5
# Warmup Iteration   1: 1008.688 ops/s
# Warmup Iteration   2: 1022.215 ops/s
# Warmup Iteration   3: 903.799 ops/s
# Warmup Iteration   4: 632.539 ops/s
# Warmup Iteration   5: 984.933 ops/s
Iteration   1: 995.141 ops/s
Iteration   2: 1013.932 ops/s
Iteration   3: 1019.650 ops/s
Iteration   4: 1023.974 ops/s
Iteration   5: 925.462 ops/s

# Run progress: 38.00% complete, ETA 00:52:12
# Fork: 5 of 5
# Warmup Iteration   1: 939.580 ops/s
# Warmup Iteration   2: 1007.596 ops/s
# Warmup Iteration   3: 999.360 ops/s
# Warmup Iteration   4: 1004.296 ops/s
# Warmup Iteration   5: 865.144 ops/s
Iteration   1: 968.248 ops/s
Iteration   2: 807.823 ops/s
Iteration   3: 955.505 ops/s
Iteration   4: 866.098 ops/s
Iteration   5: 982.704 ops/s


Result "org.sample.MyBenchmark.testExecuteTableBeforeGregorian":
  909.232 Â±(99.9%) 83.036 ops/s [Average]
  (min, avg, max) = (531.054, 909.232, 1023.974), stdev = 110.850
  CI (99.9%): [826.196, 992.267] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetDTOAfterGregorian

# Run progress: 40.00% complete, ETA 00:50:31
# Fork: 1 of 5
# Warmup Iteration   1: 398283.210 ops/s
# Warmup Iteration   2: 415035.003 ops/s
# Warmup Iteration   3: 396496.828 ops/s
# Warmup Iteration   4: 439847.486 ops/s
# Warmup Iteration   5: 420767.306 ops/s
Iteration   1: 403356.973 ops/s
Iteration   2: 413463.093 ops/s
Iteration   3: 426922.007 ops/s
Iteration   4: 430413.430 ops/s
Iteration   5: 384890.274 ops/s

# Run progress: 42.00% complete, ETA 00:48:50
# Fork: 2 of 5
# Warmup Iteration   1: 382572.963 ops/s
# Warmup Iteration   2: 431720.220 ops/s
# Warmup Iteration   3: 433640.081 ops/s
# Warmup Iteration   4: 440379.056 ops/s
# Warmup Iteration   5: 437515.259 ops/s
Iteration   1: 417236.765 ops/s
Iteration   2: 430615.182 ops/s
Iteration   3: 441726.946 ops/s
Iteration   4: 441415.547 ops/s
Iteration   5: 439315.980 ops/s

# Run progress: 44.00% complete, ETA 00:47:09
# Fork: 3 of 5
# Warmup Iteration   1: 433676.328 ops/s
# Warmup Iteration   2: 406844.068 ops/s
# Warmup Iteration   3: 388274.184 ops/s
# Warmup Iteration   4: 407919.480 ops/s
# Warmup Iteration   5: 425480.256 ops/s
Iteration   1: 422580.287 ops/s
Iteration   2: 430834.799 ops/s
Iteration   3: 438192.753 ops/s
Iteration   4: 403173.439 ops/s
Iteration   5: 420047.550 ops/s

# Run progress: 46.00% complete, ETA 00:45:27
# Fork: 4 of 5
# Warmup Iteration   1: 457543.316 ops/s
# Warmup Iteration   2: 484198.748 ops/s
# Warmup Iteration   3: 490065.009 ops/s
# Warmup Iteration   4: 491559.588 ops/s
# Warmup Iteration   5: 488298.786 ops/s
Iteration   1: 452282.473 ops/s
Iteration   2: 485176.779 ops/s
Iteration   3: 466278.915 ops/s
Iteration   4: 490506.566 ops/s
Iteration   5: 490052.923 ops/s

# Run progress: 48.00% complete, ETA 00:43:46
# Fork: 5 of 5
# Warmup Iteration   1: 453836.712 ops/s
# Warmup Iteration   2: 449841.330 ops/s
# Warmup Iteration   3: 465598.240 ops/s
# Warmup Iteration   4: 470460.614 ops/s
# Warmup Iteration   5: 446928.736 ops/s
Iteration   1: 415212.137 ops/s
Iteration   2: 434968.482 ops/s
Iteration   3: 451869.292 ops/s
Iteration   4: 438981.700 ops/s
Iteration   5: 466396.780 ops/s


Result "org.sample.MyBenchmark.testGetDTOAfterGregorian":
  437436.443 Â±(99.9%) 20144.301 ops/s [Average]
  (min, avg, max) = (384890.274, 437436.443, 490506.566), stdev = 26892.065
  CI (99.9%): [417292.142, 457580.743] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetDTOBeforeGregorian

# Run progress: 50.00% complete, ETA 00:42:05
# Fork: 1 of 5
# Warmup Iteration   1: 427764.504 ops/s
# Warmup Iteration   2: 441638.260 ops/s
# Warmup Iteration   3: 440917.374 ops/s
# Warmup Iteration   4: 443508.682 ops/s
# Warmup Iteration   5: 429358.609 ops/s
Iteration   1: 429246.377 ops/s
Iteration   2: 432658.774 ops/s
Iteration   3: 428995.684 ops/s
Iteration   4: 434041.105 ops/s
Iteration   5: 438164.409 ops/s

# Run progress: 52.00% complete, ETA 00:40:24
# Fork: 2 of 5
# Warmup Iteration   1: 419110.497 ops/s
# Warmup Iteration   2: 392932.375 ops/s
# Warmup Iteration   3: 422305.419 ops/s
# Warmup Iteration   4: 420066.739 ops/s
# Warmup Iteration   5: 422599.657 ops/s
Iteration   1: 429906.976 ops/s
Iteration   2: 424297.362 ops/s
Iteration   3: 406650.660 ops/s
Iteration   4: 401925.087 ops/s
Iteration   5: 420348.009 ops/s

# Run progress: 54.00% complete, ETA 00:38:43
# Fork: 3 of 5
# Warmup Iteration   1: 425167.727 ops/s
# Warmup Iteration   2: 425058.470 ops/s
# Warmup Iteration   3: 410993.168 ops/s
# Warmup Iteration   4: 363190.899 ops/s
# Warmup Iteration   5: 401319.117 ops/s
Iteration   1: 431964.010 ops/s
Iteration   2: 436713.535 ops/s
Iteration   3: 436011.200 ops/s
Iteration   4: 441295.361 ops/s
Iteration   5: 441697.382 ops/s

# Run progress: 56.00% complete, ETA 00:37:02
# Fork: 4 of 5
# Warmup Iteration   1: 409338.295 ops/s
# Warmup Iteration   2: 415500.462 ops/s
# Warmup Iteration   3: 419757.044 ops/s
# Warmup Iteration   4: 432893.279 ops/s
# Warmup Iteration   5: 430387.189 ops/s
Iteration   1: 438276.642 ops/s
Iteration   2: 440713.112 ops/s
Iteration   3: 406315.706 ops/s
Iteration   4: 438114.945 ops/s
Iteration   5: 439724.924 ops/s

# Run progress: 58.00% complete, ETA 00:35:21
# Fork: 5 of 5
# Warmup Iteration   1: 434921.545 ops/s
# Warmup Iteration   2: 418873.634 ops/s
# Warmup Iteration   3: 406243.021 ops/s
# Warmup Iteration   4: 384302.684 ops/s
# Warmup Iteration   5: 384924.302 ops/s
Iteration   1: 441180.328 ops/s
Iteration   2: 441630.037 ops/s
Iteration   3: 436485.487 ops/s
Iteration   4: 445022.099 ops/s
Iteration   5: 441049.485 ops/s


Result "org.sample.MyBenchmark.testGetDTOBeforeGregorian":
  432097.148 Â±(99.9%) 8843.374 ops/s [Average]
  (min, avg, max) = (401925.087, 432097.148, 445022.099), stdev = 11805.652
  CI (99.9%): [423253.774, 440940.522] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetTimestampAfterGregorian

# Run progress: 60.00% complete, ETA 00:33:40
# Fork: 1 of 5
# Warmup Iteration   1: 417178.000 ops/s
# Warmup Iteration   2: 456598.509 ops/s
# Warmup Iteration   3: 454730.224 ops/s
# Warmup Iteration   4: 453489.732 ops/s
# Warmup Iteration   5: 457133.083 ops/s
Iteration   1: 455306.291 ops/s
Iteration   2: 442092.369 ops/s
Iteration   3: 440485.234 ops/s
Iteration   4: 455454.866 ops/s
Iteration   5: 457251.615 ops/s

# Run progress: 62.00% complete, ETA 00:31:59
# Fork: 2 of 5
# Warmup Iteration   1: 446925.644 ops/s
# Warmup Iteration   2: 451958.461 ops/s
# Warmup Iteration   3: 456469.742 ops/s
# Warmup Iteration   4: 426305.929 ops/s
# Warmup Iteration   5: 454238.919 ops/s
Iteration   1: 458744.576 ops/s
Iteration   2: 420400.603 ops/s
Iteration   3: 416600.192 ops/s
Iteration   4: 436134.276 ops/s
Iteration   5: 429436.537 ops/s

# Run progress: 64.00% complete, ETA 00:30:17
# Fork: 3 of 5
# Warmup Iteration   1: 421508.123 ops/s
# Warmup Iteration   2: 448204.513 ops/s
# Warmup Iteration   3: 444622.691 ops/s
# Warmup Iteration   4: 432794.381 ops/s
# Warmup Iteration   5: 434730.559 ops/s
Iteration   1: 437348.724 ops/s
Iteration   2: 400709.463 ops/s
Iteration   3: 425242.461 ops/s
Iteration   4: 436818.088 ops/s
Iteration   5: 428004.779 ops/s

# Run progress: 66.00% complete, ETA 00:28:36
# Fork: 4 of 5
# Warmup Iteration   1: 441329.029 ops/s
# Warmup Iteration   2: 452494.884 ops/s
# Warmup Iteration   3: 436518.360 ops/s
# Warmup Iteration   4: 425856.526 ops/s
# Warmup Iteration   5: 441925.898 ops/s
Iteration   1: 425278.069 ops/s
Iteration   2: 437807.932 ops/s
Iteration   3: 450234.726 ops/s
Iteration   4: 446331.263 ops/s
Iteration   5: 409457.091 ops/s

# Run progress: 68.00% complete, ETA 00:26:55
# Fork: 5 of 5
# Warmup Iteration   1: 404222.736 ops/s
# Warmup Iteration   2: 444730.253 ops/s
# Warmup Iteration   3: 454873.949 ops/s
# Warmup Iteration   4: 445926.215 ops/s
# Warmup Iteration   5: 431548.561 ops/s
Iteration   1: 440188.102 ops/s
Iteration   2: 437147.654 ops/s
Iteration   3: 444254.237 ops/s
Iteration   4: 432579.641 ops/s
Iteration   5: 432944.672 ops/s


Result "org.sample.MyBenchmark.testGetTimestampAfterGregorian":
  435850.138 Â±(99.9%) 10927.468 ops/s [Average]
  (min, avg, max) = (400709.463, 435850.138, 458744.576), stdev = 14587.858
  CI (99.9%): [424922.670, 446777.607] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetTimestampBeforeGregorian

# Run progress: 70.00% complete, ETA 00:25:15
# Fork: 1 of 5
# Warmup Iteration   1: 397413.807 ops/s
# Warmup Iteration   2: 407557.868 ops/s
# Warmup Iteration   3: 429977.305 ops/s
# Warmup Iteration   4: 420568.017 ops/s
# Warmup Iteration   5: 405221.403 ops/s
Iteration   1: 410162.808 ops/s
Iteration   2: 433911.372 ops/s
Iteration   3: 443447.609 ops/s
Iteration   4: 411721.386 ops/s
Iteration   5: 408567.826 ops/s

# Run progress: 72.00% complete, ETA 00:23:34
# Fork: 2 of 5
# Warmup Iteration   1: 411092.223 ops/s
# Warmup Iteration   2: 430788.546 ops/s
# Warmup Iteration   3: 411773.060 ops/s
# Warmup Iteration   4: 408684.381 ops/s
# Warmup Iteration   5: 408169.618 ops/s
Iteration   1: 413765.609 ops/s
Iteration   2: 416551.000 ops/s
Iteration   3: 427168.889 ops/s
Iteration   4: 412501.185 ops/s
Iteration   5: 408712.656 ops/s

# Run progress: 74.00% complete, ETA 00:21:53
# Fork: 3 of 5
# Warmup Iteration   1: 431752.589 ops/s
# Warmup Iteration   2: 393505.917 ops/s
# Warmup Iteration   3: 432568.186 ops/s
# Warmup Iteration   4: 435165.916 ops/s
# Warmup Iteration   5: 435226.941 ops/s
Iteration   1: 418339.651 ops/s
Iteration   2: 432394.725 ops/s
Iteration   3: 357772.285 ops/s
Iteration   4: 399372.883 ops/s
Iteration   5: 426301.516 ops/s

# Run progress: 76.00% complete, ETA 00:20:12
# Fork: 4 of 5
# Warmup Iteration   1: 424012.355 ops/s
# Warmup Iteration   2: 448785.295 ops/s
# Warmup Iteration   3: 418737.125 ops/s
# Warmup Iteration   4: 407439.118 ops/s
# Warmup Iteration   5: 390321.098 ops/s
Iteration   1: 414401.320 ops/s
Iteration   2: 423899.481 ops/s
Iteration   3: 446342.005 ops/s
Iteration   4: 437151.694 ops/s
Iteration   5: 443585.099 ops/s

# Run progress: 78.00% complete, ETA 00:18:30
# Fork: 5 of 5
# Warmup Iteration   1: 418075.782 ops/s
# Warmup Iteration   2: 406215.304 ops/s
# Warmup Iteration   3: 423295.202 ops/s
# Warmup Iteration   4: 437591.038 ops/s
# Warmup Iteration   5: 435622.499 ops/s
Iteration   1: 435589.574 ops/s
Iteration   2: 438962.248 ops/s
Iteration   3: 415533.778 ops/s
Iteration   4: 380602.458 ops/s
Iteration   5: 414981.480 ops/s


Result "org.sample.MyBenchmark.testGetTimestampBeforeGregorian":
  418869.621 Â±(99.9%) 14964.276 ops/s [Average]
  (min, avg, max) = (357772.285, 418869.621, 446342.005), stdev = 19976.880
  CI (99.9%): [403905.346, 433833.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetDTO

# Run progress: 80.00% complete, ETA 00:16:49
# Fork: 1 of 5
# Warmup Iteration   1: 23721422.911 ops/s
# Warmup Iteration   2: 23832036.748 ops/s
# Warmup Iteration   3: 24336834.736 ops/s
# Warmup Iteration   4: 22715327.536 ops/s
# Warmup Iteration   5: 21681673.550 ops/s
Iteration   1: 21079365.735 ops/s
Iteration   2: 22662915.257 ops/s
Iteration   3: 23077704.814 ops/s
Iteration   4: 22983321.118 ops/s
Iteration   5: 23210136.442 ops/s

# Run progress: 82.00% complete, ETA 00:15:08
# Fork: 2 of 5
# Warmup Iteration   1: 21516778.088 ops/s
# Warmup Iteration   2: 22347693.565 ops/s
# Warmup Iteration   3: 23673887.457 ops/s
# Warmup Iteration   4: 23727114.207 ops/s
# Warmup Iteration   5: 23970463.220 ops/s
Iteration   1: 24333275.898 ops/s
Iteration   2: 23632382.840 ops/s
Iteration   3: 23478048.552 ops/s
Iteration   4: 23830760.545 ops/s
Iteration   5: 23932281.354 ops/s

# Run progress: 84.00% complete, ETA 00:13:28
# Fork: 3 of 5
# Warmup Iteration   1: 23463802.410 ops/s
# Warmup Iteration   2: 23487999.135 ops/s
# Warmup Iteration   3: 23928551.229 ops/s
# Warmup Iteration   4: 23037777.945 ops/s
# Warmup Iteration   5: 22254211.832 ops/s
Iteration   1: 21303450.285 ops/s
Iteration   2: 22088527.486 ops/s
Iteration   3: 22445678.909 ops/s
Iteration   4: 22232981.004 ops/s
Iteration   5: 22869025.893 ops/s

# Run progress: 86.00% complete, ETA 00:11:47
# Fork: 4 of 5
# Warmup Iteration   1: 21305212.532 ops/s
# Warmup Iteration   2: 21039480.471 ops/s
# Warmup Iteration   3: 21308457.661 ops/s
# Warmup Iteration   4: 23637902.198 ops/s
# Warmup Iteration   5: 23556937.421 ops/s
Iteration   1: 23857687.468 ops/s
Iteration   2: 22576617.415 ops/s
Iteration   3: 23455390.537 ops/s
Iteration   4: 23040354.162 ops/s
Iteration   5: 23342084.089 ops/s

# Run progress: 88.00% complete, ETA 00:10:06
# Fork: 5 of 5
# Warmup Iteration   1: 22257822.408 ops/s
# Warmup Iteration   2: 21443748.685 ops/s
# Warmup Iteration   3: 21128159.670 ops/s
# Warmup Iteration   4: 20913193.173 ops/s
# Warmup Iteration   5: 22528875.826 ops/s
Iteration   1: 22241602.803 ops/s
Iteration   2: 23929062.249 ops/s
Iteration   3: 23307949.506 ops/s
Iteration   4: 23717840.920 ops/s
Iteration   5: 22528757.596 ops/s


Result "org.sample.MyBenchmark.testSetDTO":
  23006288.115 Â±(99.9%) 610675.370 ops/s [Average]
  (min, avg, max) = (21079365.735, 23006288.115, 24333275.898), stdev = 815234.147
  CI (99.9%): [22395612.745, 23616963.485] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetTimestamp

# Run progress: 90.00% complete, ETA 00:08:25
# Fork: 1 of 5
# Warmup Iteration   1: 22330500.547 ops/s
# Warmup Iteration   2: 23562683.857 ops/s
# Warmup Iteration   3: 24410963.334 ops/s
# Warmup Iteration   4: 24119077.750 ops/s
# Warmup Iteration   5: 24150229.880 ops/s
Iteration   1: 24619792.235 ops/s
Iteration   2: 22862040.220 ops/s
Iteration   3: 24196362.023 ops/s
Iteration   4: 24179965.158 ops/s
Iteration   5: 24022304.904 ops/s

# Run progress: 92.00% complete, ETA 00:06:44
# Fork: 2 of 5
# Warmup Iteration   1: 23908109.609 ops/s
# Warmup Iteration   2: 23783765.755 ops/s
# Warmup Iteration   3: 22592157.010 ops/s
# Warmup Iteration   4: 19886737.298 ops/s
# Warmup Iteration   5: 22885902.042 ops/s
Iteration   1: 22649707.621 ops/s
Iteration   2: 23345226.537 ops/s
Iteration   3: 23596221.712 ops/s
Iteration   4: 23987815.868 ops/s
Iteration   5: 23289925.638 ops/s

# Run progress: 94.00% complete, ETA 00:05:03
# Fork: 3 of 5
# Warmup Iteration   1: 23460114.735 ops/s
# Warmup Iteration   2: 22948909.849 ops/s
# Warmup Iteration   3: 23608516.510 ops/s
# Warmup Iteration   4: 23817200.739 ops/s
# Warmup Iteration   5: 22641131.700 ops/s
Iteration   1: 22335931.588 ops/s
Iteration   2: 23356859.872 ops/s
Iteration   3: 22162630.103 ops/s
Iteration   4: 21619370.232 ops/s
Iteration   5: 23634836.756 ops/s

# Run progress: 96.00% complete, ETA 00:03:22
# Fork: 4 of 5
# Warmup Iteration   1: 23585282.808 ops/s
# Warmup Iteration   2: 23545513.202 ops/s
# Warmup Iteration   3: 23629123.982 ops/s
# Warmup Iteration   4: 23888862.011 ops/s
# Warmup Iteration   5: 23598844.105 ops/s
Iteration   1: 24042858.985 ops/s
Iteration   2: 24146494.470 ops/s
Iteration   3: 23991234.858 ops/s
Iteration   4: 22540867.718 ops/s
Iteration   5: 21928678.663 ops/s

# Run progress: 98.00% complete, ETA 00:01:41
# Fork: 5 of 5
# Warmup Iteration   1: 18646834.896 ops/s
# Warmup Iteration   2: 22820038.423 ops/s
# Warmup Iteration   3: 24390759.988 ops/s
# Warmup Iteration   4: 22963204.797 ops/s
# Warmup Iteration   5: 17254438.278 ops/s
Iteration   1: 19941625.389 ops/s
Iteration   2: 24435395.156 ops/s
Iteration   3: 24160346.630 ops/s
Iteration   4: 24190270.811 ops/s
Iteration   5: 21669534.714 ops/s


Result "org.sample.MyBenchmark.testSetTimestamp":
  23236251.914 Â±(99.9%) 851921.919 ops/s [Average]
  (min, avg, max) = (19941625.389, 23236251.914, 24619792.235), stdev = 1137291.388
  CI (99.9%): [22384329.995, 24088173.834] (assumes normal distribution)


# Run complete. Total time: 01:24:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt         Score        Error  Units
MyBenchmark.testExecuteCastAfterGregorian    thrpt   25      2961.317 Â±    123.694  ops/s
MyBenchmark.testExecuteCastBeforeGregorian   thrpt   25      2997.501 Â±    120.492  ops/s
MyBenchmark.testExecuteTableAfterGregorian   thrpt   25       937.095 Â±     61.611  ops/s
MyBenchmark.testExecuteTableBeforeGregorian  thrpt   25       909.232 Â±     83.036  ops/s
MyBenchmark.testGetDTOAfterGregorian         thrpt   25    437436.443 Â±  20144.301  ops/s
MyBenchmark.testGetDTOBeforeGregorian        thrpt   25    432097.148 Â±   8843.374  ops/s
MyBenchmark.testGetTimestampAfterGregorian   thrpt   25    435850.138 Â±  10927.468  ops/s
MyBenchmark.testGetTimestampBeforeGregorian  thrpt   25    418869.621 Â±  14964.276  ops/s
MyBenchmark.testSetDTO                       thrpt   25  23006288.115 Â± 610675.370  ops/s
MyBenchmark.testSetTimestamp                 thrpt   25  23236251.914 Â± 851921.919  ops/s

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>mvn clean install
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------< org.sample:Try_Benchmark_JMH >--------------------
[INFO] Building JMH benchmark sample: Java 1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ Try_Benchmark_JMH ---
[INFO] Deleting C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target
[INFO]
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\main\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ Try_Benchmark_JMH ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\classes
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ Try_Benchmark_JMH ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\src\test\resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ Try_Benchmark_JMH ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ Try_Benchmark_JMH ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ Try_Benchmark_JMH ---
[INFO] Building jar: C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar
[INFO]
[INFO] --- maven-shade-plugin:2.2:shade (default) @ Try_Benchmark_JMH ---
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.21 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[INFO] Including com.microsoft.sqlserver:mssql-jdbc:jar:8.1.1.jre13-preview-calToZDT in the shaded jar.
[INFO] Replacing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\benchmarks.jar with C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0-shaded.jar
[INFO]
[INFO] --- maven-install-plugin:2.5.1:install (default-install) @ Try_Benchmark_JMH ---
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\target\Try_Benchmark_JMH-1.0.jar to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.jar
[INFO] Installing C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH\pom.xml to C:\Users\peterb\.m2\repository\org\sample\Try_Benchmark_JMH\1.0\Try_Benchmark_JMH-1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  5.101 s
[INFO] Finished at: 2019-11-05T08:02:27-08:00
[INFO] ------------------------------------------------------------------------

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>java -jar target/benchmarks.jar
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/C:/Users/peterb/eclipse-workspace/Try_Benchmark_JMH/target/benchmarks.jar) to field java.io.Console.cs
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteCastAfterGregorian

# Run progress: 0.00% complete, ETA 01:23:20
# Fork: 1 of 5
# Warmup Iteration   1: 2371.221 ops/s
# Warmup Iteration   2: 3102.423 ops/s
# Warmup Iteration   3: 3170.424 ops/s
# Warmup Iteration   4: 2784.104 ops/s
# Warmup Iteration   5: 2610.407 ops/s
Iteration   1: 2771.588 ops/s
Iteration   2: 3160.003 ops/s
Iteration   3: 3189.275 ops/s
Iteration   4: 3105.406 ops/s
Iteration   5: 3195.395 ops/s

# Run progress: 2.00% complete, ETA 01:22:29
# Fork: 2 of 5
# Warmup Iteration   1: 3138.959 ops/s
# Warmup Iteration   2: 3146.816 ops/s
# Warmup Iteration   3: 3110.704 ops/s
# Warmup Iteration   4: 3193.692 ops/s
# Warmup Iteration   5: 3121.677 ops/s
Iteration   1: 3182.126 ops/s
Iteration   2: 3191.751 ops/s
Iteration   3: 3156.953 ops/s
Iteration   4: 3185.543 ops/s
Iteration   5: 3185.488 ops/s

# Run progress: 4.00% complete, ETA 01:20:46
# Fork: 3 of 5
# Warmup Iteration   1: 3092.243 ops/s
# Warmup Iteration   2: 3128.582 ops/s
# Warmup Iteration   3: 3191.597 ops/s
# Warmup Iteration   4: 3148.252 ops/s
# Warmup Iteration   5: 3179.553 ops/s
Iteration   1: 3160.964 ops/s
Iteration   2: 3168.119 ops/s
Iteration   3: 3025.887 ops/s
Iteration   4: 3075.077 ops/s
Iteration   5: 3104.972 ops/s

# Run progress: 6.00% complete, ETA 01:19:04
# Fork: 4 of 5
# Warmup Iteration   1: 3161.348 ops/s
# Warmup Iteration   2: 3178.393 ops/s
# Warmup Iteration   3: 3178.690 ops/s
# Warmup Iteration   4: 3194.944 ops/s
# Warmup Iteration   5: 2987.727 ops/s
Iteration   1: 3158.375 ops/s
Iteration   2: 3184.664 ops/s
Iteration   3: 3180.608 ops/s
Iteration   4: 3196.238 ops/s
Iteration   5: 3143.938 ops/s

# Run progress: 8.00% complete, ETA 01:17:23
# Fork: 5 of 5
# Warmup Iteration   1: 3007.989 ops/s
# Warmup Iteration   2: 2951.339 ops/s
# Warmup Iteration   3: 2923.444 ops/s
# Warmup Iteration   4: 3053.570 ops/s
# Warmup Iteration   5: 3025.941 ops/s
Iteration   1: 3013.309 ops/s
Iteration   2: 2997.540 ops/s
Iteration   3: 2889.565 ops/s
Iteration   4: 2960.753 ops/s
Iteration   5: 3189.016 ops/s


Result "org.sample.MyBenchmark.testExecuteCastAfterGregorian":
  3110.902 Â±(99.9%) 82.482 ops/s [Average]
  (min, avg, max) = (2771.588, 3110.902, 3196.238), stdev = 110.111
  CI (99.9%): [3028.420, 3193.384] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteCastBeforeGregorian

# Run progress: 10.00% complete, ETA 01:15:42
# Fork: 1 of 5
# Warmup Iteration   1: 3135.719 ops/s
# Warmup Iteration   2: 3174.475 ops/s
# Warmup Iteration   3: 3179.418 ops/s
# Warmup Iteration   4: 2946.484 ops/s
# Warmup Iteration   5: 3126.949 ops/s
Iteration   1: 3201.288 ops/s
Iteration   2: 3192.222 ops/s
Iteration   3: 3188.276 ops/s
Iteration   4: 3188.780 ops/s
Iteration   5: 3124.310 ops/s

# Run progress: 12.00% complete, ETA 01:14:01
# Fork: 2 of 5
# Warmup Iteration   1: 2896.338 ops/s
# Warmup Iteration   2: 3198.273 ops/s
# Warmup Iteration   3: 3173.854 ops/s
# Warmup Iteration   4: 3181.365 ops/s
# Warmup Iteration   5: 3178.982 ops/s
Iteration   1: 3152.572 ops/s
Iteration   2: 3118.524 ops/s
Iteration   3: 3118.615 ops/s
Iteration   4: 3179.669 ops/s
Iteration   5: 3182.239 ops/s

# Run progress: 14.00% complete, ETA 01:12:20
# Fork: 3 of 5
# Warmup Iteration   1: 3156.428 ops/s
# Warmup Iteration   2: 3143.619 ops/s
# Warmup Iteration   3: 3131.271 ops/s
# Warmup Iteration   4: 3006.836 ops/s
# Warmup Iteration   5: 3185.416 ops/s
Iteration   1: 3171.342 ops/s
Iteration   2: 3183.203 ops/s
Iteration   3: 3175.273 ops/s
Iteration   4: 3186.966 ops/s
Iteration   5: 3128.387 ops/s

# Run progress: 16.00% complete, ETA 01:10:39
# Fork: 4 of 5
# Warmup Iteration   1: 3109.224 ops/s
# Warmup Iteration   2: 3199.325 ops/s
# Warmup Iteration   3: 3109.734 ops/s
# Warmup Iteration   4: 3105.334 ops/s
# Warmup Iteration   5: 3188.304 ops/s
Iteration   1: 3201.078 ops/s
Iteration   2: 3064.024 ops/s
Iteration   3: 3197.783 ops/s
Iteration   4: 3176.597 ops/s
Iteration   5: 3172.277 ops/s

# Run progress: 18.00% complete, ETA 01:08:59
# Fork: 5 of 5
# Warmup Iteration   1: 3171.844 ops/s
# Warmup Iteration   2: 3183.788 ops/s
# Warmup Iteration   3: 3097.627 ops/s
# Warmup Iteration   4: 3154.468 ops/s
# Warmup Iteration   5: 3175.555 ops/s
Iteration   1: 3170.416 ops/s
Iteration   2: 3106.912 ops/s
Iteration   3: 3194.027 ops/s
Iteration   4: 3185.732 ops/s
Iteration   5: 3018.564 ops/s


Result "org.sample.MyBenchmark.testExecuteCastBeforeGregorian":
  3159.163 Â±(99.9%) 34.234 ops/s [Average]
  (min, avg, max) = (3018.564, 3159.163, 3201.288), stdev = 45.702
  CI (99.9%): [3124.929, 3193.397] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteTableAfterGregorian

# Run progress: 20.00% complete, ETA 01:07:18
# Fork: 1 of 5
# Warmup Iteration   1: 1014.697 ops/s
# Warmup Iteration   2: 1039.895 ops/s
# Warmup Iteration   3: 1048.992 ops/s
# Warmup Iteration   4: 1058.299 ops/s
# Warmup Iteration   5: 1062.050 ops/s
Iteration   1: 938.441 ops/s
Iteration   2: 1020.614 ops/s
Iteration   3: 1046.488 ops/s
Iteration   4: 1061.557 ops/s
Iteration   5: 1048.715 ops/s

# Run progress: 22.00% complete, ETA 01:05:37
# Fork: 2 of 5
# Warmup Iteration   1: 871.190 ops/s
# Warmup Iteration   2: 1056.539 ops/s
# Warmup Iteration   3: 924.897 ops/s
# Warmup Iteration   4: 1046.441 ops/s
# Warmup Iteration   5: 1061.492 ops/s
Iteration   1: 1062.457 ops/s
Iteration   2: 1059.804 ops/s
Iteration   3: 904.417 ops/s
Iteration   4: 958.984 ops/s
Iteration   5: 994.296 ops/s

# Run progress: 24.00% complete, ETA 01:03:56
# Fork: 3 of 5
# Warmup Iteration   1: 1022.103 ops/s
# Warmup Iteration   2: 1055.451 ops/s
# Warmup Iteration   3: 1053.481 ops/s
# Warmup Iteration   4: 912.562 ops/s
# Warmup Iteration   5: 938.451 ops/s
Iteration   1: 914.489 ops/s
Iteration   2: 1046.092 ops/s
Iteration   3: 1053.079 ops/s
Iteration   4: 1053.604 ops/s
Iteration   5: 1045.911 ops/s

# Run progress: 26.00% complete, ETA 01:02:15
# Fork: 4 of 5
# Warmup Iteration   1: 862.190 ops/s
# Warmup Iteration   2: 925.839 ops/s
# Warmup Iteration   3: 1019.636 ops/s
# Warmup Iteration   4: 1051.978 ops/s
# Warmup Iteration   5: 1050.624 ops/s
Iteration   1: 1051.389 ops/s
Iteration   2: 917.059 ops/s
Iteration   3: 1025.351 ops/s
Iteration   4: 921.639 ops/s
Iteration   5: 1026.441 ops/s

# Run progress: 28.00% complete, ETA 01:00:34
# Fork: 5 of 5
# Warmup Iteration   1: 1030.538 ops/s
# Warmup Iteration   2: 1047.242 ops/s
# Warmup Iteration   3: 1047.229 ops/s
# Warmup Iteration   4: 909.606 ops/s
# Warmup Iteration   5: 943.346 ops/s
Iteration   1: 1025.602 ops/s
Iteration   2: 1056.008 ops/s
Iteration   3: 1058.422 ops/s
Iteration   4: 1054.246 ops/s
Iteration   5: 900.273 ops/s


Result "org.sample.MyBenchmark.testExecuteTableAfterGregorian":
  1009.815 Â±(99.9%) 43.995 ops/s [Average]
  (min, avg, max) = (900.273, 1009.815, 1062.457), stdev = 58.733
  CI (99.9%): [965.820, 1053.810] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testExecuteTableBeforeGregorian

# Run progress: 30.00% complete, ETA 00:58:53
# Fork: 1 of 5
# Warmup Iteration   1: 1012.758 ops/s
# Warmup Iteration   2: 929.686 ops/s
# Warmup Iteration   3: 1054.716 ops/s
# Warmup Iteration   4: 1069.854 ops/s
# Warmup Iteration   5: 1062.299 ops/s
Iteration   1: 1052.967 ops/s
Iteration   2: 912.806 ops/s
Iteration   3: 951.559 ops/s
Iteration   4: 1037.404 ops/s
Iteration   5: 1031.881 ops/s

# Run progress: 32.00% complete, ETA 00:57:12
# Fork: 2 of 5
# Warmup Iteration   1: 918.006 ops/s
# Warmup Iteration   2: 939.088 ops/s
# Warmup Iteration   3: 851.204 ops/s
# Warmup Iteration   4: 948.176 ops/s
# Warmup Iteration   5: 851.790 ops/s
Iteration   1: 931.823 ops/s
Iteration   2: 957.781 ops/s
Iteration   3: 956.371 ops/s
Iteration   4: 1059.389 ops/s
Iteration   5: 892.960 ops/s

# Run progress: 34.00% complete, ETA 00:55:31
# Fork: 3 of 5
# Warmup Iteration   1: 915.445 ops/s
# Warmup Iteration   2: 992.434 ops/s
# Warmup Iteration   3: 1033.642 ops/s
# Warmup Iteration   4: 1056.513 ops/s
# Warmup Iteration   5: 1057.883 ops/s
Iteration   1: 905.303 ops/s
Iteration   2: 1003.719 ops/s
Iteration   3: 816.874 ops/s
Iteration   4: 1020.352 ops/s
Iteration   5: 1044.010 ops/s

# Run progress: 36.00% complete, ETA 00:53:50
# Fork: 4 of 5
# Warmup Iteration   1: 1008.783 ops/s
# Warmup Iteration   2: 1035.423 ops/s
# Warmup Iteration   3: 913.654 ops/s
# Warmup Iteration   4: 948.495 ops/s
# Warmup Iteration   5: 1021.810 ops/s
Iteration   1: 1046.604 ops/s
Iteration   2: 1053.602 ops/s
Iteration   3: 1050.313 ops/s
Iteration   4: 905.130 ops/s
Iteration   5: 1049.029 ops/s

# Run progress: 38.00% complete, ETA 00:52:09
# Fork: 5 of 5
# Warmup Iteration   1: 907.547 ops/s
# Warmup Iteration   2: 1041.635 ops/s
# Warmup Iteration   3: 1051.485 ops/s
# Warmup Iteration   4: 1060.756 ops/s
# Warmup Iteration   5: 1047.082 ops/s
Iteration   1: 927.065 ops/s
Iteration   2: 930.805 ops/s
Iteration   3: 1037.113 ops/s
Iteration   4: 1053.373 ops/s
Iteration   5: 1008.532 ops/s


Result "org.sample.MyBenchmark.testExecuteTableBeforeGregorian":
  985.471 Â±(99.9%) 51.050 ops/s [Average]
  (min, avg, max) = (816.874, 985.471, 1059.389), stdev = 68.150
  CI (99.9%): [934.421, 1036.520] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetDTOAfterGregorian

# Run progress: 40.00% complete, ETA 00:50:28
# Fork: 1 of 5
# Warmup Iteration   1: 448943.639 ops/s
# Warmup Iteration   2: 435295.508 ops/s
# Warmup Iteration   3: 453667.547 ops/s
# Warmup Iteration   4: 450547.235 ops/s
# Warmup Iteration   5: 447193.803 ops/s
Iteration   1: 458587.573 ops/s
Iteration   2: 459838.517 ops/s
Iteration   3: 458292.463 ops/s
Iteration   4: 436444.254 ops/s
Iteration   5: 454031.324 ops/s

# Run progress: 42.00% complete, ETA 00:48:47
# Fork: 2 of 5
# Warmup Iteration   1: 439098.146 ops/s
# Warmup Iteration   2: 451460.118 ops/s
# Warmup Iteration   3: 456008.930 ops/s
# Warmup Iteration   4: 454219.087 ops/s
# Warmup Iteration   5: 431205.263 ops/s
Iteration   1: 456953.254 ops/s
Iteration   2: 451809.162 ops/s
Iteration   3: 446780.141 ops/s
Iteration   4: 453228.823 ops/s
Iteration   5: 455051.738 ops/s

# Run progress: 44.00% complete, ETA 00:47:06
# Fork: 3 of 5
# Warmup Iteration   1: 426826.692 ops/s
# Warmup Iteration   2: 432510.716 ops/s
# Warmup Iteration   3: 444952.198 ops/s
# Warmup Iteration   4: 452463.783 ops/s
# Warmup Iteration   5: 451299.582 ops/s
Iteration   1: 456999.556 ops/s
Iteration   2: 454873.230 ops/s
Iteration   3: 435487.980 ops/s
Iteration   4: 455396.783 ops/s
Iteration   5: 446313.467 ops/s

# Run progress: 46.00% complete, ETA 00:45:25
# Fork: 4 of 5
# Warmup Iteration   1: 411560.386 ops/s
# Warmup Iteration   2: 432629.842 ops/s
# Warmup Iteration   3: 433621.879 ops/s
# Warmup Iteration   4: 431849.600 ops/s
# Warmup Iteration   5: 423222.506 ops/s
Iteration   1: 430177.323 ops/s
Iteration   2: 434691.691 ops/s
Iteration   3: 425710.990 ops/s
Iteration   4: 432923.136 ops/s
Iteration   5: 436375.377 ops/s

# Run progress: 48.00% complete, ETA 00:43:44
# Fork: 5 of 5
# Warmup Iteration   1: 428141.723 ops/s
# Warmup Iteration   2: 458567.006 ops/s
# Warmup Iteration   3: 455798.613 ops/s
# Warmup Iteration   4: 448428.138 ops/s
# Warmup Iteration   5: 455395.645 ops/s
Iteration   1: 455575.870 ops/s
Iteration   2: 454396.228 ops/s
Iteration   3: 439008.670 ops/s
Iteration   4: 452648.667 ops/s
Iteration   5: 459206.442 ops/s


Result "org.sample.MyBenchmark.testGetDTOAfterGregorian":
  448032.106 Â±(99.9%) 7980.397 ops/s [Average]
  (min, avg, max) = (425710.990, 448032.106, 459838.517), stdev = 10653.602
  CI (99.9%): [440051.709, 456012.504] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetDTOBeforeGregorian

# Run progress: 50.00% complete, ETA 00:42:03
# Fork: 1 of 5
# Warmup Iteration   1: 434212.345 ops/s
# Warmup Iteration   2: 456743.573 ops/s
# Warmup Iteration   3: 455864.035 ops/s
# Warmup Iteration   4: 434837.527 ops/s
# Warmup Iteration   5: 453460.037 ops/s
Iteration   1: 447300.432 ops/s
Iteration   2: 444231.074 ops/s
Iteration   3: 454816.163 ops/s
Iteration   4: 454410.453 ops/s
Iteration   5: 455447.951 ops/s

# Run progress: 52.00% complete, ETA 00:40:22
# Fork: 2 of 5
# Warmup Iteration   1: 423653.652 ops/s
# Warmup Iteration   2: 459665.149 ops/s
# Warmup Iteration   3: 463617.484 ops/s
# Warmup Iteration   4: 453620.528 ops/s
# Warmup Iteration   5: 462666.902 ops/s
Iteration   1: 463884.564 ops/s
Iteration   2: 424934.737 ops/s
Iteration   3: 464258.497 ops/s
Iteration   4: 455272.627 ops/s
Iteration   5: 453886.744 ops/s

# Run progress: 54.00% complete, ETA 00:38:41
# Fork: 3 of 5
# Warmup Iteration   1: 368583.813 ops/s
# Warmup Iteration   2: 410115.147 ops/s
# Warmup Iteration   3: 406427.174 ops/s
# Warmup Iteration   4: 395907.538 ops/s
# Warmup Iteration   5: 402478.376 ops/s
Iteration   1: 410145.164 ops/s
Iteration   2: 399505.512 ops/s
Iteration   3: 410330.891 ops/s
Iteration   4: 410886.761 ops/s
Iteration   5: 373063.439 ops/s

# Run progress: 56.00% complete, ETA 00:37:00
# Fork: 4 of 5
# Warmup Iteration   1: 420308.799 ops/s
# Warmup Iteration   2: 433935.941 ops/s
# Warmup Iteration   3: 431280.443 ops/s
# Warmup Iteration   4: 438042.562 ops/s
# Warmup Iteration   5: 443537.501 ops/s
Iteration   1: 438739.614 ops/s
Iteration   2: 404505.926 ops/s
Iteration   3: 450511.815 ops/s
Iteration   4: 449412.052 ops/s
Iteration   5: 443484.623 ops/s

# Run progress: 58.00% complete, ETA 00:35:19
# Fork: 5 of 5
# Warmup Iteration   1: 448199.469 ops/s
# Warmup Iteration   2: 458368.793 ops/s
# Warmup Iteration   3: 436886.678 ops/s
# Warmup Iteration   4: 455881.594 ops/s
# Warmup Iteration   5: 446041.971 ops/s
Iteration   1: 453010.317 ops/s
Iteration   2: 452813.916 ops/s
Iteration   3: 454851.807 ops/s
Iteration   4: 455986.123 ops/s
Iteration   5: 438432.499 ops/s


Result "org.sample.MyBenchmark.testGetDTOBeforeGregorian":
  438564.948 Â±(99.9%) 17780.253 ops/s [Average]
  (min, avg, max) = (373063.439, 438564.948, 464258.497), stdev = 23736.129
  CI (99.9%): [420784.695, 456345.201] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetTimestampAfterGregorian

# Run progress: 60.00% complete, ETA 00:33:38
# Fork: 1 of 5
# Warmup Iteration   1: 449447.482 ops/s
# Warmup Iteration   2: 461583.620 ops/s
# Warmup Iteration   3: 449241.363 ops/s
# Warmup Iteration   4: 461723.492 ops/s
# Warmup Iteration   5: 460277.464 ops/s
Iteration   1: 446016.323 ops/s
Iteration   2: 459352.745 ops/s
Iteration   3: 452565.191 ops/s
Iteration   4: 451789.198 ops/s
Iteration   5: 455733.819 ops/s

# Run progress: 62.00% complete, ETA 00:31:57
# Fork: 2 of 5
# Warmup Iteration   1: 436764.921 ops/s
# Warmup Iteration   2: 444669.083 ops/s
# Warmup Iteration   3: 423871.763 ops/s
# Warmup Iteration   4: 438796.980 ops/s
# Warmup Iteration   5: 445273.679 ops/s
Iteration   1: 435963.908 ops/s
Iteration   2: 442088.060 ops/s
Iteration   3: 444476.308 ops/s
Iteration   4: 425778.554 ops/s
Iteration   5: 443256.233 ops/s

# Run progress: 64.00% complete, ETA 00:30:16
# Fork: 3 of 5
# Warmup Iteration   1: 444304.356 ops/s
# Warmup Iteration   2: 459188.430 ops/s
# Warmup Iteration   3: 454766.288 ops/s
# Warmup Iteration   4: 464368.214 ops/s
# Warmup Iteration   5: 463687.442 ops/s
Iteration   1: 442627.985 ops/s
Iteration   2: 459773.756 ops/s
Iteration   3: 461476.976 ops/s
Iteration   4: 454379.032 ops/s
Iteration   5: 464356.231 ops/s

# Run progress: 66.00% complete, ETA 00:28:35
# Fork: 4 of 5
# Warmup Iteration   1: 451241.171 ops/s
# Warmup Iteration   2: 443178.379 ops/s
# Warmup Iteration   3: 459728.896 ops/s
# Warmup Iteration   4: 452751.875 ops/s
# Warmup Iteration   5: 458027.795 ops/s
Iteration   1: 446073.827 ops/s
Iteration   2: 459326.279 ops/s
Iteration   3: 460358.656 ops/s
Iteration   4: 439705.540 ops/s
Iteration   5: 453795.171 ops/s

# Run progress: 68.00% complete, ETA 00:26:54
# Fork: 5 of 5
# Warmup Iteration   1: 440129.782 ops/s
# Warmup Iteration   2: 446673.032 ops/s
# Warmup Iteration   3: 452364.117 ops/s
# Warmup Iteration   4: 453082.079 ops/s
# Warmup Iteration   5: 434543.560 ops/s
Iteration   1: 449335.433 ops/s
Iteration   2: 447729.401 ops/s
Iteration   3: 452401.455 ops/s
Iteration   4: 441954.430 ops/s
Iteration   5: 455303.435 ops/s


Result "org.sample.MyBenchmark.testGetTimestampAfterGregorian":
  449824.718 Â±(99.9%) 6852.955 ops/s [Average]
  (min, avg, max) = (425778.554, 449824.718, 464356.231), stdev = 9148.499
  CI (99.9%): [442971.763, 456677.672] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testGetTimestampBeforeGregorian

# Run progress: 70.00% complete, ETA 00:25:13
# Fork: 1 of 5
# Warmup Iteration   1: 430155.131 ops/s
# Warmup Iteration   2: 423033.949 ops/s
# Warmup Iteration   3: 435018.869 ops/s
# Warmup Iteration   4: 439076.687 ops/s
# Warmup Iteration   5: 434164.689 ops/s
Iteration   1: 438872.136 ops/s
Iteration   2: 439839.114 ops/s
Iteration   3: 425793.183 ops/s
Iteration   4: 433412.404 ops/s
Iteration   5: 436039.180 ops/s

# Run progress: 72.00% complete, ETA 00:23:32
# Fork: 2 of 5
# Warmup Iteration   1: 501205.010 ops/s
# Warmup Iteration   2: 505933.485 ops/s
# Warmup Iteration   3: 515173.411 ops/s
# Warmup Iteration   4: 515040.723 ops/s
# Warmup Iteration   5: 492575.081 ops/s
Iteration   1: 511414.549 ops/s
Iteration   2: 511139.175 ops/s
Iteration   3: 506078.405 ops/s
Iteration   4: 511544.139 ops/s
Iteration   5: 513720.625 ops/s

# Run progress: 74.00% complete, ETA 00:21:52
# Fork: 3 of 5
# Warmup Iteration   1: 412630.780 ops/s
# Warmup Iteration   2: 437418.852 ops/s
# Warmup Iteration   3: 436349.909 ops/s
# Warmup Iteration   4: 437377.447 ops/s
# Warmup Iteration   5: 431292.287 ops/s
Iteration   1: 442158.686 ops/s
Iteration   2: 440444.502 ops/s
Iteration   3: 425474.854 ops/s
Iteration   4: 434621.131 ops/s
Iteration   5: 439896.042 ops/s

# Run progress: 76.00% complete, ETA 00:20:11
# Fork: 4 of 5
# Warmup Iteration   1: 431530.345 ops/s
# Warmup Iteration   2: 439004.849 ops/s
# Warmup Iteration   3: 451075.121 ops/s
# Warmup Iteration   4: 428755.750 ops/s
# Warmup Iteration   5: 447241.902 ops/s
Iteration   1: 437392.619 ops/s
Iteration   2: 448664.615 ops/s
Iteration   3: 439233.274 ops/s
Iteration   4: 447212.592 ops/s
Iteration   5: 450019.939 ops/s

# Run progress: 78.00% complete, ETA 00:18:30
# Fork: 5 of 5
# Warmup Iteration   1: 427267.146 ops/s
# Warmup Iteration   2: 452836.266 ops/s
# Warmup Iteration   3: 454900.944 ops/s
# Warmup Iteration   4: 452794.259 ops/s
# Warmup Iteration   5: 450687.155 ops/s
Iteration   1: 455722.595 ops/s
Iteration   2: 438829.983 ops/s
Iteration   3: 447848.759 ops/s
Iteration   4: 436213.492 ops/s
Iteration   5: 436428.053 ops/s


Result "org.sample.MyBenchmark.testGetTimestampBeforeGregorian":
  453920.562 Â±(99.9%) 22323.679 ops/s [Average]
  (min, avg, max) = (425474.854, 453920.562, 513720.625), stdev = 29801.473
  CI (99.9%): [431596.883, 476244.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetDTO

# Run progress: 80.00% complete, ETA 00:16:49
# Fork: 1 of 5
# Warmup Iteration   1: 23087965.692 ops/s
# Warmup Iteration   2: 23402691.108 ops/s
# Warmup Iteration   3: 24165879.017 ops/s
# Warmup Iteration   4: 22974109.664 ops/s
# Warmup Iteration   5: 23826847.448 ops/s
Iteration   1: 23976474.068 ops/s
Iteration   2: 24529443.491 ops/s
Iteration   3: 24497438.721 ops/s
Iteration   4: 24724587.297 ops/s
Iteration   5: 24264166.429 ops/s

# Run progress: 82.00% complete, ETA 00:15:08
# Fork: 2 of 5
# Warmup Iteration   1: 24150729.103 ops/s
# Warmup Iteration   2: 24059261.015 ops/s
# Warmup Iteration   3: 24697103.972 ops/s
# Warmup Iteration   4: 24428919.800 ops/s
# Warmup Iteration   5: 24769016.939 ops/s
Iteration   1: 24717399.263 ops/s
Iteration   2: 24026040.572 ops/s
Iteration   3: 24688058.531 ops/s
Iteration   4: 24634596.080 ops/s
Iteration   5: 24758470.989 ops/s

# Run progress: 84.00% complete, ETA 00:13:27
# Fork: 3 of 5
# Warmup Iteration   1: 23994550.403 ops/s
# Warmup Iteration   2: 23724239.468 ops/s
# Warmup Iteration   3: 24019036.355 ops/s
# Warmup Iteration   4: 24666174.338 ops/s
# Warmup Iteration   5: 24324172.895 ops/s
Iteration   1: 24705700.349 ops/s
Iteration   2: 24330730.811 ops/s
Iteration   3: 24673078.631 ops/s
Iteration   4: 24745923.274 ops/s
Iteration   5: 23735693.358 ops/s

# Run progress: 86.00% complete, ETA 00:11:46
# Fork: 4 of 5
# Warmup Iteration   1: 24022915.650 ops/s
# Warmup Iteration   2: 24191263.809 ops/s
# Warmup Iteration   3: 24748859.732 ops/s
# Warmup Iteration   4: 24175519.644 ops/s
# Warmup Iteration   5: 24788590.291 ops/s
Iteration   1: 24207974.113 ops/s
Iteration   2: 24535582.633 ops/s
Iteration   3: 24582701.577 ops/s
Iteration   4: 24746669.212 ops/s
Iteration   5: 24459963.790 ops/s

# Run progress: 88.00% complete, ETA 00:10:05
# Fork: 5 of 5
# Warmup Iteration   1: 24347602.960 ops/s
# Warmup Iteration   2: 24310002.347 ops/s
# Warmup Iteration   3: 23785037.303 ops/s
# Warmup Iteration   4: 24687225.806 ops/s
# Warmup Iteration   5: 24791820.000 ops/s
Iteration   1: 24825027.121 ops/s
Iteration   2: 24491132.030 ops/s
Iteration   3: 24806454.078 ops/s
Iteration   4: 24257723.939 ops/s
Iteration   5: 24674760.328 ops/s


Result "org.sample.MyBenchmark.testSetDTO":
  24503831.627 Â±(99.9%) 214236.776 ops/s [Average]
  (min, avg, max) = (23735693.358, 24503831.627, 24825027.121), stdev = 285999.967
  CI (99.9%): [24289594.851, 24718068.404] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, Java HotSpot(TM) 64-Bit Server VM, 13+33
# VM invoker: C:\Program Files\Java\jdk-13\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testSetTimestamp

# Run progress: 90.00% complete, ETA 00:08:24
# Fork: 1 of 5
# Warmup Iteration   1: 24177360.697 ops/s
# Warmup Iteration   2: 24222126.491 ops/s
# Warmup Iteration   3: 24433614.769 ops/s
# Warmup Iteration   4: 24731170.734 ops/s
# Warmup Iteration   5: 24756591.011 ops/s
Iteration   1: 23945551.767 ops/s
Iteration   2: 24612964.097 ops/s
Iteration   3: 24756132.339 ops/s
Iteration   4: 24748795.117 ops/s
Iteration   5: 24483787.062 ops/s

# Run progress: 92.00% complete, ETA 00:06:43
# Fork: 2 of 5
# Warmup Iteration   1: 24124585.313 ops/s
# Warmup Iteration   2: 23619119.076 ops/s
# Warmup Iteration   3: 24691877.946 ops/s
# Warmup Iteration   4: 24346415.971 ops/s
# Warmup Iteration   5: 24737595.119 ops/s
Iteration   1: 24505208.827 ops/s
Iteration   2: 24413035.185 ops/s
Iteration   3: 24610437.049 ops/s
Iteration   4: 24114138.338 ops/s
Iteration   5: 24622818.875 ops/s

# Run progress: 94.00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 24374159.951 ops/s
# Warmup Iteration   2: 24267203.440 ops/s
# Warmup Iteration   3: 24319258.072 ops/s
# Warmup Iteration   4: 24833420.653 ops/s
# Warmup Iteration   5: 24160998.691 ops/s
Iteration   1: 24693721.817 ops/s
Iteration   2: 24593007.708 ops/s
Iteration   3: 24883020.517 ops/s
Iteration   4: 24633471.059 ops/s
Iteration   5: 24585831.059 ops/s

# Run progress: 96.00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 24348335.850 ops/s
# Warmup Iteration   2: 23453068.579 ops/s
# Warmup Iteration   3: 24566401.056 ops/s
# Warmup Iteration   4: 24762858.565 ops/s
# Warmup Iteration   5: 24702792.925 ops/s
Iteration   1: 24246746.498 ops/s
Iteration   2: 24636591.784 ops/s
Iteration   3: 24219306.138 ops/s
Iteration   4: 24616784.185 ops/s
Iteration   5: 24571259.139 ops/s

# Run progress: 98.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 18611380.244 ops/s
# Warmup Iteration   2: 18849693.911 ops/s
# Warmup Iteration   3: 23593745.041 ops/s
# Warmup Iteration   4: 23887873.951 ops/s
# Warmup Iteration   5: 23206817.567 ops/s
Iteration   1: 24259127.000 ops/s
Iteration   2: 24684614.660 ops/s
Iteration   3: 24727996.215 ops/s
Iteration   4: 24174979.006 ops/s
Iteration   5: 24675738.360 ops/s


Result "org.sample.MyBenchmark.testSetTimestamp":
  24520602.552 Â±(99.9%) 174342.838 ops/s [Average]
  (min, avg, max) = (23945551.767, 24520602.552, 24883020.517), stdev = 232742.701
  CI (99.9%): [24346259.714, 24694945.390] (assumes normal distribution)


# Run complete. Total time: 01:24:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt         Score        Error  Units
MyBenchmark.testExecuteCastAfterGregorian    thrpt   25      3110.902 Â±     82.482  ops/s
MyBenchmark.testExecuteCastBeforeGregorian   thrpt   25      3159.163 Â±     34.234  ops/s
MyBenchmark.testExecuteTableAfterGregorian   thrpt   25      1009.815 Â±     43.995  ops/s
MyBenchmark.testExecuteTableBeforeGregorian  thrpt   25       985.471 Â±     51.050  ops/s
MyBenchmark.testGetDTOAfterGregorian         thrpt   25    448032.106 Â±   7980.397  ops/s
MyBenchmark.testGetDTOBeforeGregorian        thrpt   25    438564.948 Â±  17780.253  ops/s
MyBenchmark.testGetTimestampAfterGregorian   thrpt   25    449824.718 Â±   6852.955  ops/s
MyBenchmark.testGetTimestampBeforeGregorian  thrpt   25    453920.562 Â±  22323.679  ops/s
MyBenchmark.testSetDTO                       thrpt   25  24503831.627 Â± 214236.776  ops/s
MyBenchmark.testSetTimestamp                 thrpt   25  24520602.552 Â± 174342.838  ops/s

C:\Users\peterb\eclipse-workspace\Try_Benchmark_JMH>